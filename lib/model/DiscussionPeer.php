<?php


/**
 * Skeleton subclass for performing query and update operations on the 'discussion' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Sat Mar 19 09:24:02 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class DiscussionPeer extends BaseDiscussionPeer {
  
  /**
   * @static
   * @param  $ligneId
   * @param Criteria|null $criteria
   * @return Criteria|null
   */
  static public function getDiscussionsFromLigneCriteria($ligneId, Criteria $criteria = null)
  {
    if(is_null($criteria))
    {
      $c = new Criteria();
    }
    else
    {
      $c = clone($criteria);
    }
    $c->add(self::LIGNE_ID, $ligneId);
    $c->add(self::VALIDE, 1);

    return $c;
  }

  /**
   * @static
   * @param  $ligneId
   * @param  $amount
   * @param null $lowerBoundId
   * @param null $upperBoundId
   * @return array
   */
  static public function getLastDiscussionsFromLigne($ligneId, $amount, $lowerBoundId = null, $upperBoundId = null)
  {
    $c = self::getDiscussionsFromLigneCriteria($ligneId);
    if(!is_null($lowerBoundId) && $lowerBoundId > 0)
    {
      $c->add(self::ID, $lowerBoundId, Criteria::GREATER_THAN);
    }
    if(!is_null($upperBoundId) && $upperBoundId > 0)
    {
      $c->add(self::ID, $upperBoundId, Criteria::LESS_THAN);
    }
    $c->addDescendingOrderByColumn(self::IMPORTANTE);
    $c->addDescendingOrderByColumn(self::UPDATED_AT);
    $c->setLimit($amount);

    return self::doSelect($c);
  }
  
  /**
   * @static
   * @param  $ligneId
   * @return int
   */
  static public function getTotalAmountFromLigne($ligneId)
  {
    return self::doCount(self::getDiscussionsFromLigneCriteria($ligneId));
  }
} // DiscussionPeer
