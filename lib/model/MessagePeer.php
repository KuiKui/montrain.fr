<?php
/**
 * Skeleton subclass for performing query and update operations on the 'message' table.
 *
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Sat Mar 19 09:24:02 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class MessagePeer extends BaseMessagePeer
{

  /**
   * Retrieve ready to use Criteria object
   *
   * @static
   * @param  $discussionId
   * @param Criteria|null $criteria
   * @return Criteria|null
   */
  static public function getMessagesFromDiscussionCriteria($discussionId, Criteria $criteria = null)
  {
    if(is_null($criteria))
    {
      $c = new Criteria();
    }
    else
    {
      $c = clone($criteria);
    }
    $c->add(self::DISCUSSION_ID, $discussionId);
    $c->add(self::VALIDE, 1);

    return $c;
  }

  static public function getLastMessagesFromDiscussion($discussionId, $amount, $lowerBoundId = null, $upperBoundId = null)
  {
    $c = self::getMessagesFromDiscussionCriteria($discussionId);
    if(!is_null($lowerBoundId) && $lowerBoundId > 0)
    {
      $c->add(self::ID, $lowerBoundId, Criteria::GREATER_THAN);
    }
    if(!is_null($upperBoundId) && $upperBoundId > 0)
    {
      $c->add(self::ID, $upperBoundId, Criteria::LESS_THAN);
    }
    $c->addDescendingOrderByColumn(self::CREATED_AT);
    $c->setLimit($amount);

    return self::doSelect($c);
  }

  static public function getTotalAmountFromDiscussion($discussionId)
  {
    return self::doCount(self::getMessagesFromDiscussionCriteria($discussionId));
  }
} // MessagePeer
